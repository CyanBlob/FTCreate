name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    env:
      PROJECT_NAME: easy_ftc
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.1
        with:
          cache-on-failure: false
      - name: Build
        run: cargo build --verbose --release
      - name: Run tests
        run: cargo test --verbose
      - name: Upload a Build Artifact
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.PROJECT_NAME }}_${{ matrix.os }}.exe
          path: target/release/${{ env.PROJECT_NAME }}.exe
      - name: Upload a Build Artifact
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.PROJECT_NAME }}_${{ matrix.os }}.app
          path: target/release/${{ env.PROJECT_NAME }}
      - name: Upload a Build Artifact
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.PROJECT_NAME }}_${{ matrix.os }}
          path: target/release/${{ env.PROJECT_NAME }}
